---
- name: Generate Cert Authority on localhost
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    - debug: var=cert
    - debug: var=key     

    - name: Creates keys directory
      file:
        path: ./.keys
        state: directory

    - name: check if CA exists 
      stat: 
        path: ./.keys/ca-config.json
      register: ca_authority

    - name: Generate local CA authority
      shell: cd .keys ; echo '{"CN":"CA","key":{"algo":"rsa","size":2048}}' | cfssl gencert -initca - | cfssljson -bare ca - ; echo '{"signing":{"default":{"expiry":"43800h","usages":["signing","key encipherment","server auth","client auth"]}}}' > ca-config.json
      when: ca_authority.stat.exists==false


- name: Install, configure and run Sensu backend
  hosts: backends
  become: true

  tasks:
    - debug: var=inventory_hostname
    - debug: var=ansible_hostname
    - debug: var=etcd_name

    - name: Generate backend cert
      delegate_to: localhost
      become: false
      environment:
        ADDRESS: "{{inventory_hostname}},{{etcd_name}}"
        NAME: "{{ etcd_name }}"
        #shell: echo '{"CN":"'$NAME'","hosts":[""],"key":{"algo":"rsa","size":2048}}'    
      shell: cd .keys; echo '{"CN":"'$NAME'","hosts":[""],"key":{"algo":"rsa","size":2048}}' | cfssl gencert -config=ca-config.json -ca=ca.pem -ca-key=ca-key.pem -hostname="$ADDRESS" -profile=peer - | cfssljson -bare $NAME

    - name : Generate etcd client cert
      delegate_to: localhost
      become: false
      environment:
        NAME: "client"
      shell:  cd .keys; echo '{"CN":"'$NAME'","hosts":[""],"key":{"algo":"rsa","size":2048}}' | cfssl gencert -config=ca-config.json -ca=ca.pem -ca-key=ca-key.pem -hostname="" -profile=client - | cfssljson -bare $NAME

    - name: Install backend
      include_role:
        name: sensu.sensu_go.backend
      vars:
        version: 5.16.1
        cluster_admin_username: tadej
        cluster_admin_password: my.password  # USE VAULT IN REAL SCENARIOS!!!
        backend_config:
          log-level: info
          etcd-name: "{{ etcd_name }}"
          etcd-initial-advertise-peer-urls: "http://{{ inventory_hostname }}:2380"
          etcd-advertise-client-urls: "http://{{ inventory_hostname }}:2379"
          etcd-listen-peer-urls: "http://0.0.0.0:2380"
          etcd-listen-client-urls: "http://0.0.0.0:2379"
          etcd-initial-cluster-token: ""
          etcd-initial-cluster-state: "new"
          etcd-initial-cluster: "sensu-cluster0=http://192.168.50.20:2380,sensu-cluster1=http://192.168.50.21:2380,sensu-cluster2=http://192.168.50.22:2380"

- name: Install, configure and run Sensu agent 
  hosts: agents
  become: true
  tasks:
    - name : Generate agent mtls cert
      delegate_to: localhost
      become: false
      environment:
        NAME: "{{ etcd_name }}"
      shell: echo "here"
        #echo '{"CN":"'$NAME'","hosts":[""],"key":{"algo":"rsa","size":2048}}' | cfssl gencert -config=ca-config.json -ca=ca.pem -ca-key=ca-key.pem -hostname="" -profile=client - | cfssljson -bare $NAME

